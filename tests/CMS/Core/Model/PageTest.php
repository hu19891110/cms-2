<?php
namespace Core\Model;

require_once 'PHPUnit/Framework.php';
//require_once '../../../bootstrap.php';

use \Mockery as m;

/**
 * Test class for Page.
 * Generated by PHPUnit on 2010-01-28 at 12:04:18.
 */
class PageTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Page
     */
    protected $page;

    protected $params;
    protected $route;
    protected $pageRoute;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->route = new Route('test/:test1/:test2/:test3');
        $this->params = array(
            'test1' => 1,
            'test2' => 2,
            'test3' => 3,
        );
        $this->page = new Page(new Layout('test'));
        $this->pageRoute = new PageRoute($this->route, $this->page, $this->params);
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testGetURL()
    {
        $this->assertEquals('/test/1/2/3/', $this->page->getURL());

        $this->page->pageRoute = null;
        $this->assertNull($this->page->getURL());
    }

    public function testSetPageRoute()
    {
        $this->page->setPageRoute($this->pageRoute);
        $this->assertEquals($this->pageRoute, $this->page->getPageRoute());
    }

    public function testSetTemplate()
    {
        $template = new Template('template', $this->page->getLayout());
        $this->page->setTemplate($template);
        $this->assertEquals($template, $this->page->getTemplate());
    }

    public function testGetBlock()
    {
        $view = new \Mock\View();
        $content = new \Core\Model\Content\Text('title', 'content', false);
        $block = m::mock(new \Core\Model\Block\StaticBlock($content, $view));
        $block->shouldReceive('getId')->andReturn(1);

        $location = new \Core\Model\Layout\Location('main');
        $layout = new \Core\Model\Layout('main');
        $page = new \Core\Model\Page($layout);
        $page->addBlock($block, $location);

        $this->assertEquals($block, $page->getBlock(1));

        $this->setExpectedException('Exception');
        $page->getBlock(2);
    }
}
?>
