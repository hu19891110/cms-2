<?php
namespace User\Model;

require_once 'PHPUnit/Framework.php';

/**
 * Test class for User.
 * Generated by PHPUnit on 2010-03-31 at 09:52:31.
 */
class UserTest extends \User\UserModuleTestCase {

    public function test__construct() {
        $this->assertEquals('test@test.com', $this->user->getEmail());
        $this->assertEquals('Modo', $this->user->getFirstName());
        $this->assertEquals('Developer', $this->user->getLastName());
    }

    public function testSetEmail() {
        $this->setExpectedException('\Modo\Model\Exception');
        $this->user->setEmail('');
    }

    public function testSetFirstName() {
        $this->setExpectedException('\Modo\Model\Exception');
        $this->user->setFirstName('');
    }

    public function testSetLastName() {
        $this->setExpectedException('\Modo\Model\Exception');
        $this->user->setLastName('');
    }

    public function testSetGroup() {
        $this->setExpectedException('\Exception');
        $this->user->setGroup(null);
    }

    public function testGetRoles() {
        $roles = $this->user->getRoles(false);
        $this->assertTrue(empty($roles));
    }

    public function testAddRole() {
        $this->user->addRole($this->role);
        $this->assertContains($this->role, $this->user->getRoles(false));

        $this->assertContains($this->groupRole, $this->user->getRoles());
    }

    public function testRemoveRole() {
        $this->user->addRole($this->role);
        $this->user->removeRole($this->role);
        $this->assertNotContains($this->role, $this->user->getRoles(false));
    }

    public function testGetRoleId() {
        $this->assertEquals('User.Guest', $this->user->getRoleId());
    }

    /**
     * @todo Implement testIsAllowed().
     */
    public function testIsAllowed() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete(
                'This test has not been implemented yet.'
        );
    }

    public function testSetAcl() {
        $acl = new \Modo\Acl();
        $this->user->setAcl($acl);
        $this->assertEquals($acl, $this->user->getAcl());
    }
}
?>
